{"version":3,"sources":["App.js","index.js"],"names":["App","useState","currencyList","setCurrencyList","secondInput","setSecondInput","firstInput","setFirstInput","baseConvertValue","setBaseConvertValue","convertValue","setConvertValue","favorites","setFavorites","days","setDays","choppedDays","setChoppedDays","isHidden","setHidden","useEffect","fetch","then","response","json","data","Object","entries","rates","handleInput","target","value","getValue","toFixed","handleSecondInput","handleSecondSelect","currencyToFindValue","find","currency","handleClick","some","split","handleRemove","filter","today","Date","handleInfo","day","getFullYear","getMonth","getDate","map","entry","date","rate","sort","a","b","alert","handleDays","innerHTML","splice","length","handleClose","className","hidden","href","onChange","key","path","exact","render","type","onClick","width","height","dataKey","domain","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d14d035.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { LineChart, Line, XAxis, YAxis } from 'recharts';\nimport './App.css';\n\n\nfunction App() {\n  const [currencyList, setCurrencyList] = useState([]);\n  const [secondInput, setSecondInput] = useState(0);\n  const [firstInput, setFirstInput] = useState(0);\n  const [baseConvertValue, setBaseConvertValue] = useState('USD');\n  const [convertValue, setConvertValue] = useState('USD');\n  const [favorites, setFavorites] = useState([]);\n  const [days, setDays] = useState([]);\n  const [choppedDays, setChoppedDays] = useState([]);\n  const [isHidden, setHidden] = useState(true);\n\n  useEffect(() => {\n    fetch('https://api.exchangeratesapi.io/latest')\n      .then(response => { return response.json() })\n      .then(data => setCurrencyList(Object.entries(data.rates)));\n  }, []);\n\n  const handleInput = ({target}) => {\n    setFirstInput(target.value);\n    setSecondInput(+(target.value/getValue(baseConvertValue)*getValue(convertValue)).toFixed(2));\n  };\n\n  const handleSecondInput = ({target}) => {\n    setSecondInput(target.value);\n    setFirstInput(+(target.value/getValue(convertValue)*getValue(baseConvertValue)).toFixed(2));\n  };\n\n  const handleSelect = ({target}) => {\n    setBaseConvertValue(target.value);\n    setSecondInput(+(firstInput/getValue(target.value)*getValue(convertValue)).toFixed(2));\n  };\n\n  const handleSecondSelect = ({target}) => {\n    setConvertValue(target.value);\n    setSecondInput(+(firstInput/getValue(baseConvertValue)*getValue(target.value)).toFixed(2));\n  };\n\n  const getValue = (currencyToFindValue) => {\n    return currencyList.find(currency => currency[0] === currencyToFindValue)[1];\n  };\n\n  const handleClick = ({target}) => {\n    if (!favorites.some(currency => currency[0] === target.value.split(',')[0])) {\n      setFavorites([\n        ...favorites,\n        target.value.split(','),\n      ]);\n    };\n  };\n\n  const handleRemove = ({target}) => {\n    setFavorites(\n      [...favorites].filter(currency => currency[0] !== target.value)\n    )\n  };\n\n  const today = new Date();\n\n  const handleInfo = ({target}) => {\n    if(currencyList.find(day => day[0] === target.value)) {\n      fetch(`https://api.exchangeratesapi.io/history?start_at=${today.getFullYear() - 5}-${\n        (today.getMonth() < 9 ? '0': '') + (today.getMonth() + 1)\n      }-${(today.getDate() < 10 ? '0': '') + today.getDate()}&end_at=${today.getFullYear()}-${\n        (today.getMonth() < 9 ? '0': '') + (today.getMonth() + 1)\n      }-${(today.getDate() < 10 ? '0': '') + today.getDate()}&base=${baseConvertValue}&symbols=${target.value}`)\n        .then(response => { return response.json() })\n        .then(data => {\n          setDays(\n            Object.entries(data.rates)\n              .map(entry => ({date: entry[0], rate: entry[1][target.value].toFixed(3)}))\n              .sort((a, b) => new Date(a.date) - new Date(b.date))\n          );\n          setChoppedDays(\n            Object.entries(data.rates)\n              .map(entry => ({date: entry[0], rate: entry[1][target.value].toFixed(3)}))\n              .sort((a, b) => new Date(a.date) - new Date(b.date))\n            );\n        });\n      setHidden(false);\n    } else {alert('sorry, no additional info on this currency')};\n  };\n\n  const handleDays = ({target}) => {\n    if(target.innerHTML === 'Last 30 days') {\n      setChoppedDays([...days].splice(days.length-25))\n    }\n    if(target.innerHTML === 'Last 12 months') {\n      setChoppedDays([...days].splice(days.length-300))\n    }\n    if(target.innerHTML === 'Last 5 years') {\n      setChoppedDays(days)\n    }\n  };\n\n  const handleClose = () => {\n    setHidden(true);\n  };\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <div\n          className=\"blurry\"\n          hidden={isHidden}\n        ></div>\n        <a href=\"#/\">Home</a>\n        {' '}\n        <a href=\"#/currencies\">Currencies</a>\n        <br />\n        <div>Choose your base currency</div>\n        <select className=\"select\" value={baseConvertValue} onChange={handleSelect}>\n          {currencyList.map(currency => (\n            <option key={currency[0]}>{currency[0]}</option>\n          ))}\n        </select>\n        <Switch>\n          <Route path=\"/\" exact render={() =>\n            <>\n              <h1>Currency Converter</h1>\n              <input className=\"input\" type=\"number\" value={firstInput} onChange={handleInput}/>\n              {baseConvertValue}\n              <br/>\n              <input className=\"input\" type=\"number\" value={secondInput} onChange={handleSecondInput}/>\n              <select className=\"select\" value={convertValue} onChange={handleSecondSelect}>\n                {currencyList.map(currency => (\n                  <option key={currency[0]}>{currency[0]}</option>\n                ))}\n              </select>\n            </>\n          }/>\n          <Route path=\"/currencies\" render={() =>\n            <div>\n              {favorites.length ? <h3>Favorite Currencies</h3> : null}\n              {favorites.map(currency => (\n                <div className=\"currencyRow\" key={currency[0]}>\n                  <button value={currency[0]} onClick={handleInfo}>Info</button>\n                  <span>{currency[0]}</span>\n                  <span>{(currency[1]/getValue(baseConvertValue)).toFixed(5)}</span>\n                  <button value={currency[0]} onClick={handleRemove}>&#10006;</button>\n                </div>\n              ))}\n              <h3>Currencies</h3>\n              {currencyList.map(currency => (\n                <div className=\"currencyRow\" key={currency[0]}>\n                  <button value={currency[0]} onClick={handleInfo}>Info</button>\n                  <span>{currency[0]}</span>\n                  <span>{(currency[1]/getValue(baseConvertValue)).toFixed(5)}</span>\n                  <button value={currency} onClick={handleClick}>&#9733;</button>\n                </div>\n              ))}\n              <div hidden={isHidden} className=\"chart\">\n                <LineChart\n                  width={500}\n                  height={300}\n                  data={choppedDays}\n                >\n                  <XAxis dataKey=\"date\" />\n                  <YAxis domain={['dataMin', 'dataMax']}/>\n                  <Line dataKey=\"rate\"/>\n                </LineChart>\n                <button className=\"chartButton\" onClick={handleDays}>Last 30 days</button>\n                <button className=\"chartButton\" onClick={handleDays}>Last 12 months</button>\n                <button className=\"chartButton\" onClick={handleDays}>Last 5 years</button>\n                <button className=\"chartButton\" onClick={handleClose}>X</button>\n              </div>\n            </div>\n          }/>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}